{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-jodie-core-src-templates-homepage-query-tsx-e137263387ce158b28a9.js","mappings":"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","sources":["webpack://jodie/./src/@lekoarts/gatsby-theme-jodie/styles/item-list.ts","webpack://jodie/./src/@lekoarts/gatsby-theme-jodie/utils/modify-grid.ts","webpack://jodie/./src/@lekoarts/gatsby-theme-jodie/components/homepage.tsx","webpack://jodie/./node_modules/@lekoarts/gatsby-theme-jodie-core/src/templates/homepage-query.tsx","webpack://jodie/./node_modules/@lekoarts/gatsby-theme-jodie/src/@lekoarts/gatsby-theme-jodie-core/components/homepage.tsx","webpack://jodie/./src/@lekoarts/gatsby-theme-jodie/components/grid-item.tsx","webpack://jodie/./src/@lekoarts/gatsby-theme-jodie/locales/index.ts","webpack://jodie/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import type { ThemeUICSSObject } from \"theme-ui\"\n\nexport const itemListWrapperStyles: ThemeUICSSObject = {\n  \".item-list\": {\n    display: `grid`,\n    gridAutoRows: `auto`,\n  },\n  \"@media screen and (min-width: 40em)\": {\n    \".item-list\": { gridTemplateColumns: `repeat(2, minmax(0, 1fr))` },\n    \".div2 .item,.div3 .item:nth-of-type(3n+1),.div4 .item:nth-of-type(4n+1),.div4 .item:nth-of-type(4n+4),.div5 .item:nth-of-type(5n+1),.div6 .item:nth-of-type(3n+1),.div7 .item:nth-of-type(7n+1),.div7 .item:nth-of-type(7n+4),.div7 .item:nth-of-type(7n+7),.div8 .item:nth-of-type(4n+1),.div8 .item:nth-of-type(4n+4),.div9 .item:nth-of-type(3n+1)\":\n      {\n        gridColumn: `auto / span 2`,\n      },\n  },\n  \"@media screen and (min-width: 1280px)\": {\n    \".item-list\": { gridTemplateColumns: `repeat(3, minmax(0, 1fr))` },\n    \".div4 .item:nth-of-type(12n+2),.div4 .item:nth-of-type(12n+11),.div5 .item:nth-of-type(15n+2),.div5 .item:nth-of-type(15n+13),.div7 .item:nth-of-type(7n+2),.div7 .item:nth-of-type(7n+6),.div8 .item:nth-of-type(12n+2),.div8 .item:nth-of-type(12n+11),.div9 .item:nth-of-type(9n+2),.div9 .item:nth-of-type(9n+7)\":\n      {\n        gridRow: `auto / span 2`,\n      },\n    \".div3 .item:nth-of-type(6n+3),.div3 .item:nth-of-type(6n+5),.div4 .item:nth-of-type(12n+3),.div4 .item:nth-of-type(12n+4),.div4 .item:nth-of-type(12n+10),.div4 .item:nth-of-type(12n+12),.div5 .item:nth-of-type(15n+3),.div5 .item:nth-of-type(15n+4),.div5 .item:nth-of-type(15n+12),.div5 .item:nth-of-type(15n+14),.div6 .item:nth-of-type(12n+6),.div6 .item:nth-of-type(12n+11),.div7 .item:nth-of-type(7n+3),.div7 .item:nth-of-type(7n+4),.div7 .item:nth-of-type(7n+5),.div7 .item:nth-of-type(7n+7),.div8 .item:nth-of-type(12n+3),.div8 .item:nth-of-type(12n+4),.div8 .item:nth-of-type(12n+10),.div8 .item:nth-of-type(12n+12),.div9 .item:nth-of-type(9n+3),.div9 .item:nth-of-type(9n+4),.div9 .item:nth-of-type(9n+5),.div9 .item:nth-of-type(9n+8),.div9 .item:nth-of-type(9n+9)\":\n      {\n        gridColumn: `auto / span 2`,\n      },\n    \".div2 .item,.div3 .item:nth-of-type(6n+1),.div3 .item:nth-of-type(6n+4),.div4 .item:nth-of-type(12n+1),.div4 .item:nth-of-type(12n+5),.div4 .item:nth-of-type(12n+9),.div5 .item:nth-of-type(15n+1),.div5 .item:nth-of-type(15n+5),.div5 .item:nth-of-type(15n+6),.div5 .item:nth-of-type(15n+10),.div5 .item:nth-of-type(15n+11),.div5 .item:nth-of-type(15n+15),.div6 .item:nth-of-type(12n+1),.div6 .item:nth-of-type(12n+7),.div7 .item:nth-of-type(7n+1),.div8 .item:nth-of-type(12n+1),.div8 .item:nth-of-type(12n+5),.div8 .item:nth-of-type(12n+9),.div9 .item:nth-of-type(9n+1)\":\n      {\n        gridColumn: `auto / span 3`,\n      },\n  },\n}\n\nexport const itemStyles: ThemeUICSSObject = {\n  minHeight: [`500px`, `700px`],\n}\n","import { IGatsbyImageData } from \"gatsby-plugin-image\"\n\nexport interface IGridItem {\n  slug: string\n  title: string\n  cover: {\n    childImageSharp: {\n      gatsbyImageData: IGatsbyImageData\n    }\n  }\n  __typename: \"MdxProject\" | \"MdxPage\"\n}\n\nfunction defaultResolver(data: IGridItem[]): IGridItem[] {\n  return data\n}\n\nfunction modifyGrid(data: IGridItem[], resolver = defaultResolver): IGridItem[] {\n  return resolver(data)\n}\n\n/**\n * Examples:\n *\n * You can import the onlyPages() function to filter out everything but pages:\n *\n * const modifyGrid = data => onlyPages(data)\n *\n * You can also do more sophisticated filtering, like the filterBySlug() function that also takes in a second parameter (an array of slugs)\n * You'll need to pass the data in the second argument:\n *\n * const modifyGrid = (data) => filterBySlug(data, [\"/about\"])\n */\n\nexport default modifyGrid\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { PageProps } from \"gatsby\"\nimport { IGatsbyImageData, GatsbyImage } from \"gatsby-plugin-image\"\nimport Layout from \"./layout\"\nimport GridItem from \"./grid-item\"\nimport { itemListWrapperStyles, itemStyles } from \"../styles/item-list\"\nimport locales from \"../locales\"\nimport { visuallyHidden } from \"../styles/utils\"\nimport modifyGrid from \"../utils/modify-grid\"\n\ntype DataProps = {\n  projects: {\n    nodes: {\n      slug: string\n      title: string\n      cover: {\n        childImageSharp: {\n          gatsbyImageData: IGatsbyImageData\n        }\n      }\n      __typename: \"MdxProject\"\n    }[]\n  }\n  pages: {\n    nodes: {\n      slug: string\n      title: string\n      cover: {\n        childImageSharp: {\n          gatsbyImageData: IGatsbyImageData\n        }\n      }\n      __typename: \"MdxPage\"\n    }[]\n  }\n}\n\nconst Homepage: React.FC<PageProps<DataProps>> = ({ data: { pages, projects } }) => {\n  const rawItems = [...pages.nodes, ...projects.nodes]\n  const items = modifyGrid(rawItems)\n  const itemsCount = items.length\n  let divisor = 9\n\n  for (let i = 0; i < itemsCount; i++) {\n    const quotient = itemsCount % divisor\n    const quotientAlt = (itemsCount - 1) % divisor\n\n    if (quotient === 0 || quotientAlt === 0) {\n      break\n    }\n\n    divisor -= 1\n  }\n\n  return (\n    <Layout>\n      <h1 sx={visuallyHidden} data-testid=\"page-title\">\n        {locales.home}\n      </h1>\n      <div className={`item-list-wrapper`} sx={itemListWrapperStyles}>\n        <div className={`item-list div${divisor}`}>\n          {items.length > 0 ? (\n            items.map((item, index) => (\n              <GridItem to={item.slug} className=\"item\" key={item.title} sx={itemStyles} data-testid={item.title}>\n                <GatsbyImage\n                  loading={index === 0 ? `eager` : `lazy`}\n                  image={item.cover.childImageSharp.gatsbyImageData}\n                  alt=\"\"\n                />\n                <span>{item.title}</span>\n              </GridItem>\n            ))\n          ) : (\n            <div sx={{ padding: 3 }}>\n              No projects and pages found at the locations defined for \"projectsPath\" and \"pagesPath\"\n            </div>\n          )}\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default Homepage\n","import { graphql } from \"gatsby\"\nimport HomepageComponent from \"../components/homepage\"\n\nexport default HomepageComponent\n\nexport const query = graphql`\n  query ($homepagePageLimit: Int!, $homepageProjectLimit: Int!) {\n    pages: allPage(sort: { fields: title, order: ASC }, limit: $homepagePageLimit) {\n      nodes {\n        slug\n        title\n        cover {\n          childImageSharp {\n            gatsbyImageData(width: 1200, quality: 90)\n          }\n        }\n        __typename\n      }\n    }\n    projects: allProject(sort: { fields: date, order: DESC }, limit: $homepageProjectLimit) {\n      nodes {\n        slug\n        title: shortTitle\n        cover {\n          childImageSharp {\n            gatsbyImageData(width: 1200, quality: 90)\n          }\n        }\n        __typename\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport { PageProps } from \"gatsby\"\nimport { IGatsbyImageData } from \"gatsby-plugin-image\"\nimport Homepage from \"../../../components/homepage\"\n\ntype DataProps = {\n  projects: {\n    nodes: {\n      slug: string\n      title: string\n      cover: {\n        childImageSharp: {\n          gatsbyImageData: IGatsbyImageData\n        }\n      }\n      __typename: \"MdxProject\"\n    }[]\n  }\n  pages: {\n    nodes: {\n      slug: string\n      title: string\n      cover: {\n        childImageSharp: {\n          gatsbyImageData: IGatsbyImageData\n        }\n      }\n      __typename: \"MdxPage\"\n    }[]\n  }\n}\n\nexport default function JodieCoreHomepage({ children, ...props }: PageProps<DataProps>) {\n  return <Homepage {...props}>{children}</Homepage>\n}\n","/** @jsx jsx */\nimport { jsx, get } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst GridItem: React.FC<{ to: string; className?: string }> = ({ children, to, ...props }) => (\n  <Link\n    to={to}\n    sx={{\n      position: `relative`,\n      // @ts-ignore\n      \"> div\": {\n        position: `absolute !important`,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n      },\n      \"> div:before\": {\n        position: `absolute`,\n        content: `''`,\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        zIndex: 5,\n        background: `linear-gradient(45deg, rgba(22,22,22,0) 75%, rgba(0,0,0,0.35) 100%)`,\n      },\n      \"> div:after\": {\n        position: `absolute`,\n        content: `''`,\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        boxShadow: (t) => `inset 0 0 0 0px ${get(t, `colors.white`)}`,\n        transition: `all 0.3s ease-in-out`,\n      },\n      \"> div img\": {\n        transition: `all 0.3s ease 0s !important`,\n      },\n      \"> span\": {\n        zIndex: 10,\n        color: `white`,\n        position: `absolute`,\n        left: 0,\n        right: 0,\n        textAlign: `right`,\n        fontWeight: `bold`,\n        fontSize: [3, 3, 4],\n        padding: 3,\n        textShadow: `0 1px 4px rgba(0, 0, 0, 0.5)`,\n      },\n      \"&:hover\": {\n        \"> div img\": {\n          transform: `scale(1.05)`,\n        },\n      },\n      \"&:focus\": {\n        outline: `none`,\n        \"> div:after\": {\n          boxShadow: (t) => `inset 0 0 0 7px ${get(t, `colors.white`)}`,\n          zIndex: 10,\n        },\n      },\n      \"@media screen and (prefers-reduced-motion: reduce)\": {\n        \"&:hover\": {\n          \"> div img\": {\n            transform: `scale(1)`,\n          },\n          \"> div:after\": {\n            boxShadow: (t) => `inset 0 0 0 7px ${get(t, `colors.white`)}`,\n            zIndex: 10,\n          },\n        },\n      },\n      variant: `grid-item`,\n    }}\n    {...props}\n  >\n    {children}\n  </Link>\n)\n\nexport default GridItem\n","const locales = {\n  home: `Home`,\n  projects: `Projects`,\n  instagram: `Instagram`,\n}\n\nexport default locales\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["itemListWrapperStyles","display","gridAutoRows","gridTemplateColumns","gridColumn","gridRow","itemStyles","minHeight","defaultResolver","data","resolver","pages","projects","rawItems","nodes","items","modifyGrid","itemsCount","length","divisor","i","sx","visuallyHidden","locales","className","map","item","index","to","slug","key","title","G","loading","image","cover","childImageSharp","gatsbyImageData","alt","padding","children","props","Link","position","top","right","bottom","left","content","zIndex","background","boxShadow","t","get","transition","color","textAlign","fontWeight","fontSize","textShadow","transform","outline","variant","home","instagram","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","indexOf"],"sourceRoot":""}